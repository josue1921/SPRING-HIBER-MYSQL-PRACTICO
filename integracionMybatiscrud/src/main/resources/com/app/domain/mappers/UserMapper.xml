<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
  'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>

<mapper namespace='com.app.domain.mappers.UserMapper'>

	<select id='getUserById' parameterType='int'
		resultType='com.app.domain.dto.User'>
		SELECT
		id as userId,
		email as emailId ,
		password,
		first_name as firstName,
		last_name as lastName
		FROM USER
		WHERE ID = #{userId}
	</select>
	<!-- Instead of referencing Fully Qualified Class Names we can register 
		Aliases in mybatis-config.xml and use Alias names. -->
	<resultMap type='User' id='UserResult'>
		<id property='userId' column='id' />
		<result property='email' column='email' />
		<result property='password' column='password' />
		<result property='firstName' column='first_name' />
		<result property='lastName' column='last_name' />
	</resultMap>

	<resultMap type='Blog' id='BlogResult'>
		<id property='blogId' column='blog_id' />
		<result property='blogName' column='BLOG_NAME' />
		<result property='createdOn' column='CREATED_ON' />
	</resultMap>

	<select id='getAllUsers' resultMap='UserResult'>
		SELECT * FROM USER
	</select>

	<insert id='insertUser' parameterType='User'
		useGeneratedKeys='true' keyProperty='userId'>
		INSERT INTO USER(email, password, first_name, last_name)
		VALUES(#{email}, #{password}, #{firstName}, #{lastName})
	</insert>

	<update id='updateUser' parameterType='User'>
		UPDATE USER
		SET
		PASSWORD= #{password},
		FIRST_NAME = #{firstName},
		LAST_NAME = #{lastName}
		WHERE ID = #{userId}
	</update>

	<delete id='deleteUser' parameterType='int'>
		DELETE FROM USER WHERE ID = #{userId}
	</delete>

</mapper>